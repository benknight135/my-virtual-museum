block variables
doctype html
html
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    script(src="https://aframe.io/releases/1.0.4/aframe.min.js")
    script(src="https://unpkg.com/aframe-look-at-component@0.8.0/dist/aframe-look-at-component.min.js")
    script(src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js")
    script(src="https://cdn.jsdelivr.net/gh/donmccurdy/aframe-extras@v6.1.1/dist/aframe-extras.min.js")
    title #{title}

  body(style="margin: 0; overflow: hidden;")
    a-scene(
      vr-mode-ui="enabled: false"
      embedded
      arjs="sourceType: webcam; debugUIEnabled: false; sourceWidth:1280; sourceHeight:960; displayWidth: 1280; displayHeight: 960;"
      renderer="logarithmicDepthBuffer: true")
      each item in items
        each model in item.models
          if model.type === "obj"
            a-entity(
              scale=model.scale.x+" "+model.scale.y+" "+model.scale.z
              obj-model="obj: url("+model.obj+"); mtl: url("+model.mtl+")"
              gps-entity-place="latitude: "+item.location.lat+"; longitude: "+item.location.long+";"
              position=model.position.x+" "+model.position.y+" "+model.position.z
            )
          if model.type === "gltf"
            a-entity(
              scale=model.scale.x+" "+model.scale.y+" "+model.scale.z
              gltf-model="url("+model.gltf+");"
              animation-mixer="clip: *; loop: repeat;"
              gps-entity-place="latitude: "+item.location.lat+"; longitude: "+item.location.long+";"
              position=model.position.x+" "+model.position.y+" "+model.position.z
            )
          if model.type === "html"
            | !{model.data}
      a-camera(gps-camera)